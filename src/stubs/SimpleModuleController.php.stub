<?php namespace App\Http\Controllers;

use Illuminate\Support\Facades\DB;
use crocodicstudio\crudbooster\controllers\CBController;

class AdminFooBarController extends CBController {

    # module_name
    # table
    # title_field
    # limit
    # order_by
    # show_numbering
    # global_privilege
    # button_table_action
    # button_action_style
    # button_add
    # button_delete
    # button_edit
    # button_detail
    # button_show
    # button_filter
    # button_export
    # button_import
    # button_bulk_action

    /**
     * Setting the sidebar mode
     * Value available: normal,mini,collapse,collapse-mini
     */
    # sidebar_mode

    public function cbInit() {

        # columns

        # forms

    }


    /**
     * This method is to add additional query
     * @param \Illuminate\Database\Query\Builder $query
     */
    public function hookQueryIndex(&$query) {

    }

    /**
     * This method is to customize the user input data from a New Data Submission
     * @param array $post_data
     * E.g:
     * $post_data['name'] = strtoupper($post_data['name']);
     * $post_data['cms_users_id'] = cb()->auth()->id();
     */
    public function hookBeforeAdd(&$post_data) {

    }

    /**
     * This method is to you make an additional process after the data has been inserted
     * @param int $id this variable is a last_insert_id value from the sql data.
     *
     */
    public function hookAfterAdd($id) {

    }

    /**
     * This method is to customize the user input data from an Update Data Submission
     * @param array $post_data
     * @param int $id
     * E.g:
     * $post_data['name'] = strtoupper($post_data['name']);
     */
    public function hookBeforeEdit(&$post_data,$id) {

    }

    /**
     * This method is to you make an additional process after the data has been saved
     * @param int $id This variabel is current ID record of data
     *
     */
    public function hookAfterEdit($id) {

    }

    /**
     * This method is to you make an additional process before the delete executed
     * @param int $id
     */
    public function hookBeforeDelete($id) {

    }

    /**
     * This method is to you make an additional process after the delete executed
     * @param int $id
     */
    public function hookAfterDelete($id) {

    }


    /**
     * Never mind to create your own method in here
     */
}